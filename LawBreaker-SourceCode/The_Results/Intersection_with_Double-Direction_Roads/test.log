2024-10-24 04:55:47, INFO: Current Test Case: Intersection_with_Double-Direction_Roads.txt
2024-10-24 04:55:52, INFO: Current scenario is scenario0.

2024-10-24 04:55:52, INFO: 
 Evaluate Scenario scenario0 with Assertion 0: (((((((((((((((G ((((((trafficLightAheadcolor==3) & ((stoplineAhead<=2.0 | junctionAhead<=2.0))) & (~PriorityNPCAhead==1)) & (~PriorityPedsAhead==1)) -> (F[0,2] (speed>0.5))))) & (G ((((((trafficLightAheadcolor==2) & ((stoplineAhead<=0.0 | (currentLanenumber+1)==0)))) -> ((F[0,2] (speed>0.5)))) & ((((((trafficLightAheadcolor==2) & stoplineAhead<=3.5) & (~stoplineAhead<=0.5)) & currentLanenumber>0)) -> ((F[0,3] (speed<0.5)))))))) & (G (((((((trafficLightAheadcolor==1) & ((stoplineAhead<=2.0 | junctionAhead<=2.0))) & (~(direction==2)))) -> ((F[0,3] (speed<0.5)))) & (((((((trafficLightAheadcolor==1) & ((stoplineAhead<=2.0 | junctionAhead<=2.0))) & direction==2) & (~PriorityNPCAhead==1)) & (~PriorityPedsAhead==1))) -> ((F[0,2] (speed>0.5)))))))) & ((G ((currentLanenumber>=2 -> ((speed>=speedLimitlowerLimit) & (speed<=speedLimitupperLimit))))) & (G (((isLaneChanging==1 & currentLanenumber>=2) -> (~PriorityNPCAhead==1)))))) & (G ((speed>=speedLimitlowerLimit & speed<=speedLimitupperLimit)))) & (((G (((((direction==1 | direction==2) | isTurningAround==1)) -> (speed<=30))))) & ((G ((((((rain>=0.5 | fog>=0.5) | snow>=0.5) | visibility<=50)) -> (speed<=30))))))) & (G ((isOverTaking==1 -> (((turnSignal==1) & ((((F[-1,2] (hornOn==1))) | ((((highBeamOn==1 & ((highBeamOn==1 -> ((F[0,2] (lowBeamOn==1))))))) | ((lowBeamOn==1 & ((lowBeamOn==1 -> ((F[0,2] (highBeamOn==1)))))))))))) & ((F[0,10] (((turnSignal==2) & (((((isLaneChanging==1) -> (NearestNPCAhead<=5.0))) & (isLaneChanging==1)))))))))))) & (G ((~(gear==2))))) & (((((G (((((((trafficLightAheadcolor==3 & direction==1) & Time<=20.0) & Time>=7.0)) -> (turnSignal==1)) & ((((trafficLightAheadcolor==3 & direction==1) & ((Time>=20.0 | Time<=7.0)))) -> ((turnSignal==1 & lowBeamOn==1)))))) & (G (((trafficLightAheadcolor==3 & (((~NPCAheadAhead<=8.0) | ((((NPCAheadAhead<=8.0 -> (F[0,2] (NPCAheadspeed>0.5)))) & NPCAheadAhead<=8.0))))) -> (((F[0,3] (speed>0.5))) & (~NPCAheadAhead<=0.5)))))) & (G (((trafficLightAheadcolor==1 & (((stoplineAhead<=2.0 | junctionAhead<=2.0) | NPCAheadAhead<=0.5))) -> (F[0,2] (speed<0.5)))))) & (G (((((direction==2 & NPCAheadAhead<=2.0) & ((F[0,2] (NPCAheadspeed<0.5))))) -> (F[0,3] (speed<0.5)))))) & (G ((((((direction==2 | direction==1)) & ((PriorityNPCAhead==1 | PriorityPedsAhead==1)))) -> (F[0,2] (speed<0.5))))))) & (G (((((signalAhead==0 & ((PriorityNPCAhead==1 | PriorityPedsAhead==1))) & junctionAhead<=1.0)) -> (F[0,2] (speed<0.5)))))) & (G ((((isTrafficJam==1 & (((NPCAheadspeed<0.5 | NPCAheadAhead<=0.5) | junctionAhead<=1.0)))) -> (F[0,2] (speed<0.5)))))) & ((G ((direction==1 -> turnSignal==1))) & (G ((direction==2 -> turnSignal==2))))) & (G ((((((((((~streetLightOn==1) & ((Time>=20.0 | Time<=7.0)))) | (((rain>=0.5 | fog>=0.5) | snow>=0.5))) & (~NPCAheadAhead<=10.0))) -> highBeamOn==1) & (NPCAheadAhead<=10.0 -> (~highBeamOn==1))) & (fog>=0.5 -> ((fogLightOn==1 & warningflashOn==1))))))) & (G (((((crosswalkAhead<=5.0 | ((signalAhead==0 & junctionAhead<=1.0)))) & ((Time>=20.0 | Time<=7.0))) -> ((F[0,3] ((highBeamOn==1 & ((highBeamOn==1 -> (F[0,3] (lowBeamOn==1))))))) | (F[0,3] ((lowBeamOn==1 & ((lowBeamOn==1 -> (F[0,3] (highBeamOn==1)))))))))))) & (G (((~honkingAllowed==1) -> (~hornOn==1))))) 
 
2024-10-24 04:55:54, INFO: Running Generation: 0, Individual: 1
2024-10-24 04:57:13, INFO: Running Generation: 0, Individual: 2
2024-10-24 04:58:10, INFO: Running Generation: 0, Individual: 3
2024-10-24 04:59:04, INFO: total coverage rate: 10/81 = 0.12345679012345678, uncovered predicates: ['eventually(((((trafficLightAheadcolor==3)and(stoplineAhead<=2.0))and(not(PriorityNPCAhead==1)))and(not(PriorityPedsAhead==1)))and(always[0,2](not(speed>0.5))))', 'eventually(((((trafficLightAheadcolor==3)and(junctionAhead<=2.0))and(not(PriorityNPCAhead==1)))and(not(PriorityPedsAhead==1)))and(always[0,2](not(speed>0.5))))', 'eventually(((trafficLightAheadcolor==2)and(stoplineAhead<=0.0))and(always[0,2](not(speed>0.5))))', 'eventually(((trafficLightAheadcolor==2)and((currentLanenumber+1)==0))and(always[0,2](not(speed>0.5))))', 'eventually(((((trafficLightAheadcolor==2)and(stoplineAhead<=3.5))and(not(stoplineAhead<=0.5)))and(currentLanenumber>0))and(always[0,3](not(speed<0.5))))', 'eventually((((trafficLightAheadcolor==1)and(stoplineAhead<=2.0))and(not(direction==2)))and(always[0,3](not(speed<0.5))))', 'eventually((((trafficLightAheadcolor==1)and(junctionAhead<=2.0))and(not(direction==2)))and(always[0,3](not(speed<0.5))))', 'eventually((((((trafficLightAheadcolor==1)and(stoplineAhead<=2.0))and(direction==2))and(not(PriorityNPCAhead==1)))and(not(PriorityPedsAhead==1)))and(always[0,2](not(speed>0.5))))', 'eventually((((((trafficLightAheadcolor==1)and(junctionAhead<=2.0))and(direction==2))and(not(PriorityNPCAhead==1)))and(not(PriorityPedsAhead==1)))and(always[0,2](not(speed>0.5))))', 'eventually((currentLanenumber>=2)and(not(speed>=speedLimitlowerLimit)))', 'eventually((currentLanenumber>=2)and(not(speed<=speedLimitupperLimit)))', 'eventually(((isLaneChanging==1)and(currentLanenumber>=2))and(PriorityNPCAhead==1))', 'eventually(not(speed>=speedLimitlowerLimit))', 'eventually(not(speed<=speedLimitupperLimit))', 'eventually((direction==1)and(not(speed<=30)))', 'eventually((direction==2)and(not(speed<=30)))', 'eventually((isTurningAround==1)and(not(speed<=30)))', 'eventually((snow>=0.5)and(not(speed<=30)))', 'eventually((visibility<=50)and(not(speed<=30)))', 'eventually((isOverTaking==1)and(not(turnSignal==1)))', 'eventually((isOverTaking==1)and((always[-1,2](not(hornOn==1)))and((not(highBeamOn==1))and(not(lowBeamOn==1)))))', 'eventually((isOverTaking==1)and((always[-1,2](not(hornOn==1)))and((not(highBeamOn==1))and((lowBeamOn==1)and(always[0,2](not(highBeamOn==1)))))))', 'eventually((isOverTaking==1)and((always[-1,2](not(hornOn==1)))and(((highBeamOn==1)and(always[0,2](not(lowBeamOn==1))))and(not(lowBeamOn==1)))))', 'eventually((isOverTaking==1)and((always[-1,2](not(hornOn==1)))and(((highBeamOn==1)and(always[0,2](not(lowBeamOn==1))))and((lowBeamOn==1)and(always[0,2](not(highBeamOn==1)))))))', 'eventually((isOverTaking==1)and(always[0,10](not(turnSignal==2))))', 'eventually((isOverTaking==1)and(always[0,10]((isLaneChanging==1)and(not(NearestNPCAhead<=5.0)))))', 'eventually((isOverTaking==1)and(always[0,10](not(isLaneChanging==1))))', 'eventually(gear==2)', 'eventually(((((trafficLightAheadcolor==3)and(direction==1))and(Time<=20.0))and(Time>=7.0))and(not(turnSignal==1)))', 'eventually((((trafficLightAheadcolor==3)and(direction==1))and(Time>=20.0))and(not(turnSignal==1)))', 'eventually((((trafficLightAheadcolor==3)and(direction==1))and(Time>=20.0))and(not(lowBeamOn==1)))', 'eventually((((trafficLightAheadcolor==3)and(direction==1))and(Time<=7.0))and(not(turnSignal==1)))', 'eventually((((trafficLightAheadcolor==3)and(direction==1))and(Time<=7.0))and(not(lowBeamOn==1)))', 'eventually(((trafficLightAheadcolor==3)and(not(NPCAheadAhead<=8.0)))and(NPCAheadAhead<=0.5))', 'eventually(((trafficLightAheadcolor==3)and((not(NPCAheadAhead<=8.0))and(NPCAheadAhead<=8.0)))and(always[0,3](not(speed>0.5))))', 'eventually(((trafficLightAheadcolor==3)and((not(NPCAheadAhead<=8.0))and(NPCAheadAhead<=8.0)))and(NPCAheadAhead<=0.5))', 'eventually(((trafficLightAheadcolor==3)and((eventually[0,2](NPCAheadspeed>0.5))and(NPCAheadAhead<=8.0)))and(always[0,3](not(speed>0.5))))', 'eventually(((trafficLightAheadcolor==3)and((eventually[0,2](NPCAheadspeed>0.5))and(NPCAheadAhead<=8.0)))and(NPCAheadAhead<=0.5))', 'eventually(((trafficLightAheadcolor==1)and(stoplineAhead<=2.0))and(always[0,2](not(speed<0.5))))', 'eventually(((trafficLightAheadcolor==1)and(junctionAhead<=2.0))and(always[0,2](not(speed<0.5))))', 'eventually(((trafficLightAheadcolor==1)and(NPCAheadAhead<=0.5))and(always[0,2](not(speed<0.5))))', 'eventually((((direction==2)and(NPCAheadAhead<=2.0))and(eventually[0,2](NPCAheadspeed<0.5)))and(always[0,3](not(speed<0.5))))', 'eventually(((direction==2)and(PriorityNPCAhead==1))and(always[0,2](not(speed<0.5))))', 'eventually(((direction==2)and(PriorityPedsAhead==1))and(always[0,2](not(speed<0.5))))', 'eventually(((direction==1)and(PriorityNPCAhead==1))and(always[0,2](not(speed<0.5))))', 'eventually(((direction==1)and(PriorityPedsAhead==1))and(always[0,2](not(speed<0.5))))', 'eventually((((signalAhead==0)and(PriorityNPCAhead==1))and(junctionAhead<=1.0))and(always[0,2](not(speed<0.5))))', 'eventually((((signalAhead==0)and(PriorityPedsAhead==1))and(junctionAhead<=1.0))and(always[0,2](not(speed<0.5))))', 'eventually(((isTrafficJam==1)and(NPCAheadspeed<0.5))and(always[0,2](not(speed<0.5))))', 'eventually(((isTrafficJam==1)and(NPCAheadAhead<=0.5))and(always[0,2](not(speed<0.5))))', 'eventually(((isTrafficJam==1)and(junctionAhead<=1.0))and(always[0,2](not(speed<0.5))))', 'eventually((direction==1)and(not(turnSignal==1)))', 'eventually((direction==2)and(not(turnSignal==2)))', 'eventually(((snow>=0.5)and(not(NPCAheadAhead<=10.0)))and(not(highBeamOn==1)))', 'eventually((NPCAheadAhead<=10.0)and(highBeamOn==1))', 'eventually(((crosswalkAhead<=5.0)and(Time>=20.0))and((always[0,3](not(highBeamOn==1)))and(always[0,3](not(lowBeamOn==1)))))', 'eventually(((crosswalkAhead<=5.0)and(Time>=20.0))and((always[0,3](not(highBeamOn==1)))and(always[0,3]((lowBeamOn==1)and(always[0,3](not(highBeamOn==1)))))))', 'eventually(((crosswalkAhead<=5.0)and(Time>=20.0))and((always[0,3]((highBeamOn==1)and(always[0,3](not(lowBeamOn==1)))))and(always[0,3](not(lowBeamOn==1)))))', 'eventually(((crosswalkAhead<=5.0)and(Time>=20.0))and((always[0,3]((highBeamOn==1)and(always[0,3](not(lowBeamOn==1)))))and(always[0,3]((lowBeamOn==1)and(always[0,3](not(highBeamOn==1)))))))', 'eventually(((crosswalkAhead<=5.0)and(Time<=7.0))and((always[0,3](not(highBeamOn==1)))and(always[0,3](not(lowBeamOn==1)))))', 'eventually(((crosswalkAhead<=5.0)and(Time<=7.0))and((always[0,3](not(highBeamOn==1)))and(always[0,3]((lowBeamOn==1)and(always[0,3](not(highBeamOn==1)))))))', 'eventually(((crosswalkAhead<=5.0)and(Time<=7.0))and((always[0,3]((highBeamOn==1)and(always[0,3](not(lowBeamOn==1)))))and(always[0,3](not(lowBeamOn==1)))))', 'eventually(((crosswalkAhead<=5.0)and(Time<=7.0))and((always[0,3]((highBeamOn==1)and(always[0,3](not(lowBeamOn==1)))))and(always[0,3]((lowBeamOn==1)and(always[0,3](not(highBeamOn==1)))))))', 'eventually((((signalAhead==0)and(junctionAhead<=1.0))and(Time>=20.0))and((always[0,3](not(highBeamOn==1)))and(always[0,3](not(lowBeamOn==1)))))', 'eventually((((signalAhead==0)and(junctionAhead<=1.0))and(Time>=20.0))and((always[0,3](not(highBeamOn==1)))and(always[0,3]((lowBeamOn==1)and(always[0,3](not(highBeamOn==1)))))))', 'eventually((((signalAhead==0)and(junctionAhead<=1.0))and(Time>=20.0))and((always[0,3]((highBeamOn==1)and(always[0,3](not(lowBeamOn==1)))))and(always[0,3](not(lowBeamOn==1)))))', 'eventually((((signalAhead==0)and(junctionAhead<=1.0))and(Time>=20.0))and((always[0,3]((highBeamOn==1)and(always[0,3](not(lowBeamOn==1)))))and(always[0,3]((lowBeamOn==1)and(always[0,3](not(highBeamOn==1)))))))', 'eventually((((signalAhead==0)and(junctionAhead<=1.0))and(Time<=7.0))and((always[0,3](not(highBeamOn==1)))and(always[0,3]((lowBeamOn==1)and(always[0,3](not(highBeamOn==1)))))))', 'eventually((((signalAhead==0)and(junctionAhead<=1.0))and(Time<=7.0))and((always[0,3]((highBeamOn==1)and(always[0,3](not(lowBeamOn==1)))))and(always[0,3](not(lowBeamOn==1)))))', 'eventually((((signalAhead==0)and(junctionAhead<=1.0))and(Time<=7.0))and((always[0,3]((highBeamOn==1)and(always[0,3](not(lowBeamOn==1)))))and(always[0,3]((lowBeamOn==1)and(always[0,3](not(highBeamOn==1)))))))', 'eventually((not(honkingAllowed==1))and(hornOn==1))']

